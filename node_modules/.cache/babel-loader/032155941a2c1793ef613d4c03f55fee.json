{"remainingRequest":"/Users/josephrt/Desktop/todo_f/todo/node_modules/babel-loader/lib/index.js!/Users/josephrt/Desktop/todo_f/todo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/josephrt/Desktop/todo_f/todo/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/josephrt/Desktop/todo_f/todo/src/components/TaskList.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/josephrt/Desktop/todo_f/todo/src/components/TaskList.vue","mtime":1641420334720},{"path":"/Users/josephrt/Desktop/todo_f/todo/babel.config.js","mtime":1641400111697},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/cache-loader/dist/cjs.js","mtime":1641400095029},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/babel-loader/lib/index.js","mtime":1641400095212},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/cache-loader/dist/cjs.js","mtime":1641400095029},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/vue-loader-v16/dist/index.js","mtime":1641400088146}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUYXNrTGlzdCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG5vZGVzOiBbXSwKICAgICAgdG9kbzogMCwKICAgICAgdGFza3M6IDAsCiAgICAgIGRvbmU6IDAKICAgIH07CiAgfSwKICBtZXRob2RzOiB7fSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9hcGkvbm9kZS8nLCB7CiAgICAgIGhlYWRlcnM6IHsKICAgICAgICBBdXRob3JpemF0aW9uOiAiVG9rZW4gMmQ2YjYzOGI2NTc5ODkxODM4MGI3MjA4MjA5MDNkMzRjNGQ4OGJjOCIKICAgICAgfQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXNwb25zZS5kYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIG5ld0l0ZW0gPSB7CiAgICAgICAgICB1c2VyOiByZXNwb25zZS5kYXRhW2ldLnVzZXIsCiAgICAgICAgICBub2RlOiByZXNwb25zZS5kYXRhW2ldLm5vZGUsCiAgICAgICAgICBkYXRlOiByZXNwb25zZS5kYXRhW2ldLmRhdGUsCiAgICAgICAgICBpc19maW5pc2hlZDogcmVzcG9uc2UuZGF0YVtpXS5pc19maW5pc2hlZAogICAgICAgIH07CgogICAgICAgIF90aGlzLm5vZGVzLnB1c2gobmV3SXRlbSk7CiAgICAgIH0KICAgIH0pOwogICAgY29uc29sZS5sb2codGhpcy5ub2Rlcyk7CiAgfSwKICBjb21wdXRlZDogewogICAgdG9fZG86IGZ1bmN0aW9uIHRvX2RvKCkgewogICAgICB2YXIgbnVtID0gMDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ub2Rlcy5sZW5ndGg7IGkrKykgewogICAgICAgIGlmICghdGhpcy5ub2Rlc1tpXS5pc19maW5pc2hlZCkgewogICAgICAgICAgbnVtICs9IDE7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gbnVtOwogICAgfSwKICAgIGNvdW50X29mX3Rhc2tzOiBmdW5jdGlvbiBjb3VudF9vZl90YXNrcygpIHsKICAgICAgcmV0dXJuIHRoaXMubm9kZXMubGVuZ3RoOwogICAgfSwKICAgIGNvdW50X29mX2ZpbmlzaGVkOiBmdW5jdGlvbiBjb3VudF9vZl9maW5pc2hlZCgpIHsKICAgICAgdmFyIG51bSA9IDA7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubm9kZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAodGhpcy5ub2Rlc1tpXS5pc19maW5pc2hlZCkgewogICAgICAgICAgbnVtICs9IDE7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gbnVtOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/josephrt/Desktop/todo_f/todo/src/components/TaskList.vue"],"names":[],"mappings":"AAmBA,OAAO,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,UADO;AAEb,EAAA,IAFa,kBAEN;AACL,WAAO;AACL,MAAA,KAAK,EAAE,EADF;AAEL,MAAA,IAAI,EAAE,CAFD;AAGL,MAAA,KAAK,EAAE,CAHF;AAIL,MAAA,IAAI,EAAE;AAJD,KAAP;AAMD,GATY;AAUb,EAAA,OAAO,EAAE,EAVI;AAWb,EAAA,OAXa,qBAWH;AAAA;;AACR,IAAA,KAAK,CAAC,GAAN,CAAU,iCAAV,EAA6C;AAC3C,MAAA,OAAO,EAAE;AACP,QAAA,aAAa,EAAE;AADR;AADkC,KAA7C,EAIG,IAJH,CAIQ,UAAA,QAAO,EAAK;AAClB,WAAK,IAAI,CAAA,GAAI,CAAb,EAAgB,CAAA,GAAI,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,YAAM,OAAM,GAAI;AACd,UAAA,IAAI,EAAE,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IADT;AAEd,UAAA,IAAI,EAAE,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IAFT;AAGd,UAAA,IAAI,EAAE,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IAHT;AAId,UAAA,WAAW,EAAE,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB;AAJhB,SAAhB;;AAMA,QAAA,KAAI,CAAC,KAAL,CAAW,IAAX,CAAgB,OAAhB;AACF;AACD,KAdD;AAeA,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;AACD,GA5BY;AA6Bb,EAAA,QAAQ,EAAE;AACR,IAAA,KADQ,mBACA;AACN,UAAI,GAAE,GAAI,CAAV;;AACA,WAAK,IAAI,CAAA,GAAI,CAAb,EAAgB,CAAA,GAAI,KAAK,KAAL,CAAW,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,YAAI,CAAC,KAAK,KAAL,CAAW,CAAX,EAAc,WAAnB,EAAgC;AAC9B,UAAA,GAAE,IAAK,CAAP;AACF;AACF;;AACA,aAAO,GAAP;AACD,KATO;AAUR,IAAA,cAVQ,4BAUS;AACf,aAAO,KAAK,KAAL,CAAW,MAAlB;AACD,KAZO;AAaR,IAAA,iBAbQ,+BAaY;AAClB,UAAI,GAAE,GAAI,CAAV;;AACA,WAAK,IAAI,CAAA,GAAI,CAAb,EAAgB,CAAA,GAAI,KAAK,KAAL,CAAW,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,YAAI,KAAK,KAAL,CAAW,CAAX,EAAc,WAAlB,EAA+B;AAC7B,UAAA,GAAE,IAAK,CAAP;AACF;AACF;;AACA,aAAO,GAAP;AACF;AArBQ;AA7BG,CAAf","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"tasks\">\n      <p class=\"head_text\">üìùTo-Do List</p>\n      <input class=\"task_input\" placeholder=\"–ß–µ–º –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –∑–∞–Ω—è—Ç—å—Å—è?\">\n      <ul class=\"counter\">\n        <li class=\"list-item first\">Tasks: {{ count_of_tasks }}</li>\n        <li class=\"list-item\">Todo: {{ to_do }}</li>\n        <li class=\"list-item\">Done: {{ count_of_finished }}</li>\n      </ul>\n      <div class=\"task_list\" v-for=\"item in nodes\" :key=\"item.user\">\n        <input type=\"checkbox\" class=\"check\" :checked=\"item.is_finished\">\n        <div class=\"task_item\"><p>{{ item.node }}</p></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n  name: \"TaskList\",\n  data() {\n    return {\n      nodes: [],\n      todo: 0,\n      tasks: 0,\n      done: 0\n    }\n  },\n  methods: {},\n  mounted() {\n    axios.get('http://localhost:8000/api/node/', {\n      headers: {\n        Authorization: \"Token 2d6b638b65798918380b720820903d34c4d88bc8\"\n      }\n    }).then(response => {\n      for (let i = 0; i < response.data.length; i++) {\n        const newItem = {\n          user: response.data[i].user,\n          node: response.data[i].node,\n          date: response.data[i].date,\n          is_finished: response.data[i].is_finished\n        };\n        this.nodes.push(newItem);\n      }\n    })\n    console.log(this.nodes)\n  },\n  computed: {\n    to_do() {\n      let num = 0\n      for (let i = 0; i < this.nodes.length; i++) {\n        if (!this.nodes[i].is_finished) {\n          num += 1\n        }\n      }\n      return num\n    },\n    count_of_tasks() {\n      return this.nodes.length\n    },\n    count_of_finished() {\n      let num = 0;\n      for (let i = 0; i < this.nodes.length; i++) {\n        if (this.nodes[i].is_finished) {\n          num += 1\n        }\n      }\n      return num\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.container {\n  display: flex;\n  width: 1000px;\n  margin: 20px auto;\n  align-items: center;\n  justify-content: center;\n}\n\n.tasks {\n  position: relative;\n}\n\nh1 {\n  font-family: Montserrat, sans-serif, \"Noto Sans Old Italic\";\n  font-size: 24px;\n  text-align: center;\n}\n\n.head_text {\n  font-family: Montserrat, sans-serif;\n  font-size: 36px;\n  padding: 10px;\n  margin: 0;\n  text-align: center;\n}\n\n.task_input {\n  width: 400px;\n  height: 30px;\n  border: none;\n  border-radius: 2px;\n  outline: none;\n  box-shadow: 0 3px 5px grey;\n  font-size: 16px;\n  font-family: Montserrat, sans-serif;\n  font-style: italic;\n  padding: 8px;\n}\n\n.counter {\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n}\n\n.list-item {\n  margin: 0 10px;\n  font-family: Montserrat, sans-serif;\n  font-style: normal;\n  font-size: 20px;\n}\n\n.first {\n  margin-left: 0;\n  padding-left: 0;\n}\n\n.task_list {\n  display: grid;\n  grid-template-columns: repeat(15, 1fr);\n  grid-template: \"cb nd nd nd nd nd nd nd nd nd nd nd nd nd nd\"auto\n                 \"cb nd nd nd nd nd nd nd nd nd nd nd nd nd nd\";\n  margin-top: 15px;\n  font-family: Montserrat, sans-serif;\n  font-size: 16px;\n}\n\n.check {\n  grid-area: cb;\n  height: 30px;\n  width: 30px;\n  margin: 0;\n  padding: 0;\n}\n\n\n.task_item {\n  grid-area: nd;\n  width: 370px;\n  margin: 0;\n  margin-left: 10px;\n  padding: 0;\n  border: 1px solid darkgray;\n  /*height: 30px;*/\n}\n\n</style>\n"],"sourceRoot":""}]}