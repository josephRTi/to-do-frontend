{"remainingRequest":"/Users/josephrt/Desktop/todo_f/todo/node_modules/thread-loader/dist/cjs.js!/Users/josephrt/Desktop/todo_f/todo/node_modules/babel-loader/lib/index.js!/Users/josephrt/Desktop/todo_f/todo/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/josephrt/Desktop/todo_f/todo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/josephrt/Desktop/todo_f/todo/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/josephrt/Desktop/todo_f/todo/src/components/TaskList.vue?vue&type=template&id=3f86cfab&scoped=true","dependencies":[{"path":"/Users/josephrt/Desktop/todo_f/todo/src/components/TaskList.vue","mtime":1642077501397},{"path":"/Users/josephrt/Desktop/todo_f/todo/babel.config.js","mtime":1641400111697},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/cache-loader/dist/cjs.js","mtime":1641400095029},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/thread-loader/dist/cjs.js","mtime":1641400094821},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/babel-loader/lib/index.js","mtime":1641400095212},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1641400088152},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/cache-loader/dist/cjs.js","mtime":1641400095029},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/vue-loader-v16/dist/index.js","mtime":1641400088146}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHdpdGhLZXlzIGFzIF93aXRoS2V5cywgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKdmFyIF93aXRoU2NvcGVJZCA9IGZ1bmN0aW9uIF93aXRoU2NvcGVJZChuKSB7CiAgcmV0dXJuIF9wdXNoU2NvcGVJZCgiZGF0YS12LTNmODZjZmFiIiksIG4gPSBuKCksIF9wb3BTY29wZUlkKCksIG47Cn07Cgp2YXIgX2hvaXN0ZWRfMSA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgibGluayIsIHsKICAgIHJlbDogInN0eWxlc2hlZXQiLAogICAgaHJlZjogImh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2ZvbnQtYXdlc29tZS80LjcuMC9jc3MvZm9udC1hd2Vzb21lLm1pbi5jc3MiCiAgfSwgbnVsbCwgLTEpOwp9KTsKCnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAiY29udGFpbmVyIgp9Owp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogInRhc2tzIgp9OwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCB7CiAgICBjbGFzczogImhlYWRfdGV4dCIKICB9LCAi8J+TnVRvLURvIExpc3QiLCAtMSk7Cn0pOwoKdmFyIF9ob2lzdGVkXzUgPSB7CiAgY2xhc3M6ICJjb3VudGVyIgp9Owp2YXIgX2hvaXN0ZWRfNiA9IHsKICBjbGFzczogImxpc3QtaXRlbSBmaXJzdCIKfTsKdmFyIF9ob2lzdGVkXzcgPSB7CiAgY2xhc3M6ICJsaXN0LWl0ZW0iCn07CnZhciBfaG9pc3RlZF84ID0gewogIGNsYXNzOiAibGlzdC1pdGVtIgp9Owp2YXIgX2hvaXN0ZWRfOSA9IFsiY2hlY2tlZCIsICJvbkNsaWNrIl07CnZhciBfaG9pc3RlZF8xMCA9IHsKICBjbGFzczogInRhc2tfaXRlbSIKfTsKdmFyIF9ob2lzdGVkXzExID0gWyJvbkNsaWNrIl07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfaG9pc3RlZF8xLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMywgW19ob2lzdGVkXzQsIF9jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogICAgY2xhc3M6ICJ0YXNrX2lucHV0IiwKICAgIHBsYWNlaG9sZGVyOiAi0KfQtdC8INC/0LvQsNC90LjRgNGD0LXRgtC1INC30LDQvdGP0YLRjNGB0Y8/IiwKICAgIGlkOiAibmV3X25vZGUiLAogICAgb25LZXl1cDogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBfd2l0aEtleXMoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuY3JlYXRlTm9kZSAmJiAkb3B0aW9ucy5jcmVhdGVOb2RlLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSwgWyJlbnRlciJdKSkKICB9LCBudWxsLCAzMiksIF9jcmVhdGVFbGVtZW50Vk5vZGUoInVsIiwgX2hvaXN0ZWRfNSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImxpIiwgX2hvaXN0ZWRfNiwgIlRhc2tzOiAiICsgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5jb3VudF9vZl90YXNrcyksIDEpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJsaSIsIF9ob2lzdGVkXzcsICJUb2RvOiAiICsgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy50b19kbyksIDEpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJsaSIsIF9ob2lzdGVkXzgsICJEb25lOiAiICsgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5jb3VudF9vZl9maW5pc2hlZCksIDEpXSksIChfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJGRhdGEubm9kZXMsIGZ1bmN0aW9uIChpdGVtKSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCB7CiAgICAgIGNsYXNzOiAidGFza19saXN0IiwKICAgICAga2V5OiBpdGVtLmlkCiAgICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW5wdXQiLCB7CiAgICAgIHR5cGU6ICJjaGVja2JveCIsCiAgICAgIGNsYXNzOiAiY2hlY2siLAogICAgICBjaGVja2VkOiBpdGVtLmlzX2ZpbmlzaGVkLAogICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiAkb3B0aW9ucy51cGRhdGVJdGVtKGl0ZW0uaWQpOwogICAgICB9CiAgICB9LCBudWxsLCA4LCBfaG9pc3RlZF85KSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTAsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgbnVsbCwgX3RvRGlzcGxheVN0cmluZyhpdGVtLm5vZGUpLCAxKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCB7CiAgICAgIGNsYXNzOiAiZmEgZmEtdHJhc2gtbyIsCiAgICAgIHN0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIzNnB4IiwKICAgICAgICAibWFyZ2luLWxlZnQiOiAiMTBweCIKICAgICAgfSwKICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gJG9wdGlvbnMuZGVsZXRlSXRlbShpdGVtLmlkKTsKICAgICAgfQogICAgfSwgbnVsbCwgOCwgX2hvaXN0ZWRfMTEpXSk7CiAgfSksIDEyOCkpXSldKV0sIDY0KTsKfQ=="},{"version":3,"sources":["/Users/josephrt/Desktop/todo_f/todo/src/components/TaskList.vue"],"names":[],"mappings":";;;;;;;sBACE,mBAAA,CAAiH,MAAjH,EAAiH;AAA3G,IAAA,GAAG,EAAC,YAAuG;AAA1F,IAAA,IAAI,EAAC;AAAqF,GAAjH,E,IAAA,E,EAAA,C;;;;AACK,EAAA,KAAK,EAAC;;;AACJ,EAAA,KAAK,EAAC;;;;sBACT,mBAAA,CAAqC,GAArC,EAAqC;AAAlC,IAAA,KAAK,EAAC;AAA4B,GAArC,EAAqB,cAArB,EAAiC,CAAA,CAAjC,C;;;;AAEI,EAAA,KAAK,EAAC;;;AACJ,EAAA,KAAK,EAAC;;;AACN,EAAA,KAAK,EAAC;;;AACN,EAAA,KAAK,EAAC;;;;AAIL,EAAA,KAAK,EAAC;;;;6DAZjB,U,EACA,mBAAA,CAeM,KAfN,EAAA,UAAA,EAeM,CAdJ,mBAAA,CAaM,KAbN,EAAA,UAAA,EAaM,CAZJ,UAYI,EAXJ,mBAAA,CAA6G,OAA7G,EAA6G;AAAtG,IAAA,KAAK,EAAC,YAAgG;AAAnF,IAAA,WAAW,EAAC,0BAAuE;AAA5C,IAAA,EAAE,EAAC,UAAyC;AAAzB,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA;AAAA,aAAQ,QAAA,CAAA,UAAA,IAAA,QAAA,CAAA,UAAA,OAAA,QAAA,YAAR;AAAA,KAAA,EAAkB,CAAA,OAAA,CAAlB,CAAA;AAAoB,GAA7G,E,IAAA,E,EAAA,CAWI,EAVJ,mBAAA,CAIK,IAJL,EAAA,UAAA,EAIK,CAHH,mBAAA,CAA4D,IAA5D,EAAA,UAAA,EAA4B,YAAO,gBAAA,CAAG,QAAA,CAAA,cAAH,CAAnC,EAAoD,CAApD,CAGG,EAFH,mBAAA,CAA4C,IAA5C,EAAA,UAAA,EAAsB,WAAM,gBAAA,CAAG,QAAA,CAAA,KAAH,CAA5B,EAAoC,CAApC,CAEG,EADH,mBAAA,CAAwD,IAAxD,EAAA,UAAA,EAAsB,WAAM,gBAAA,CAAG,QAAA,CAAA,iBAAH,CAA5B,EAAgD,CAAhD,CACG,CAJL,CAUI,G,kBALJ,mBAAA,CAIM,SAJN,EAIM,IAJN,EAIM,WAAA,CAJgC,KAAA,CAAA,KAIhC,EAJqC,UAAb,IAAa,EAAT;yBAAlC,mBAAA,CAIM,KAJN,EAIM;AAJD,MAAA,KAAK,EAAC,WAIL;AAJwC,MAAA,GAAG,EAAE,IAAI,CAAC;AAIlD,KAJN,E,CACE,mBAAA,CAA8F,OAA9F,EAA8F;AAAvF,MAAA,IAAI,EAAC,UAAkF;AAAvE,MAAA,KAAK,EAAC,OAAiE;AAAxD,MAAA,OAAO,EAAE,IAAI,CAAC,WAA0C;AAA5B,MAAA,OAAK,EAAA,iBAAA,MAAA;AAAA,eAAE,QAAA,CAAA,UAAA,CAAW,IAAI,CAAC,EAAhB,CAAF;AAAA;AAAuB,KAA9F,E,IAAA,E,CAAA,E,UAAA,C,EACA,mBAAA,CAAmD,KAAnD,EAAA,WAAA,EAAmD,CAA5B,mBAAA,CAAsB,GAAtB,EAAsB,IAAtB,EAAsB,gBAAA,CAAhB,IAAI,CAAC,IAAW,CAAtB,EAAe,CAAf,CAA4B,CAAnD,C,EACA,mBAAA,CAA8G,QAA9G,EAA8G;AAAtG,MAAA,KAAK,EAAC,eAAgG;AAAhF,MAAA,KAAyC,EAAzC;AAAA,qBAAA,MAAA;AAAA,uBAAA;AAAA,OAAgF;AAArC,MAAA,OAAK,EAAA,iBAAA,MAAA;AAAA,eAAE,QAAA,CAAA,UAAA,CAAW,IAAI,CAAC,EAAhB,CAAF;AAAA;AAAgC,KAA9G,E,IAAA,E,CAAA,E,WAAA,C,CAHF,C;GAIM,CAJN,E,GAAA,CAKI,EAbN,CAcI,CAfN,C","sourcesContent":["<template>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n  <div class=\"container\">\n    <div class=\"tasks\">\n      <p class=\"head_text\">üìùTo-Do List</p>\n      <input class=\"task_input\" placeholder=\"–ß–µ–º –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –∑–∞–Ω—è—Ç—å—Å—è?\" id=\"new_node\" v-on:keyup.enter=\"createNode\">\n      <ul class=\"counter\">\n        <li class=\"list-item first\">Tasks: {{ count_of_tasks }}</li>\n        <li class=\"list-item\">Todo: {{ to_do }}</li>\n        <li class=\"list-item\">Done: {{ count_of_finished }}</li>\n      </ul>\n      <div class=\"task_list\" v-for=\"item in nodes\" :key=\"item.id\">\n        <input type=\"checkbox\" class=\"check\" :checked=\"item.is_finished\" @click=\"updateItem(item.id)\">\n        <div class=\"task_item\"><p>{{ item.node }}</p></div>\n        <button class=\"fa fa-trash-o\" style=\"font-size:36px; margin-left: 10px\" @click=\"deleteItem(item.id)\"></button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n  name: \"TaskList\",\n  data() {\n    return {\n      nodes: [],\n      todo: 0,\n      tasks: 0,\n      done: 0\n    }\n  },\n  methods: {\n    async deleteItem(id) {\n      let node\n      for (let i = 0; i < this.nodes.length; i++) {\n        if (this.nodes[i].id === id) {\n          node = this.nodes[i]\n          break\n        }\n      }\n      axios.delete('https://restapito-do-app.herokuapp.com/api/node_update/' + node.id, {\n        headers: {\n          Authorization: \"Token \" + this.$store.state.Token\n        },\n        data: node\n      }).then(this.nodes = this.nodes.filter(function (item) {\n        return item !== node\n      }))\n    },\n    updateItem(id) {\n      let node\n      for (let i = 0; i < this.nodes.length; i++) {\n        if (this.nodes[i].id === id) {\n          node = this.nodes[i]\n          break\n        }\n      }\n      node.is_finished = !node.is_finished\n      axios.put('https://restapito-do-app.herokuapp.com/api/node_update/' + node.id, node, {\n        headers: {\n          Authorization: \"Token \" + this.$store.state.Token\n        },\n      })\n    },\n    async createNode() {\n      let node = document.getElementById('new_node').value\n      let currentDate = new Date()\n      let Node = {\n        node: node,\n        date: currentDate.toISOString().split('T')[0],\n        user: this.$store.state.user_id,\n        is_finished: false\n      }\n      axios.post('https://restapito-do-app.herokuapp.com/api/node/', Node, {\n        headers: {\n          Authorization: \"Token \" + this.$store.state.Token\n        },\n      }).then(response => (this.nodes.push(response.data)))\n      document.getElementById('new_node').value = \"\"\n    }\n  },\n  mounted() {\n    axios.get('https://restapito-do-app.herokuapp.com/api/node/', {\n      headers: {\n        Authorization: \"Token \" + this.$store.state.Token\n      }\n    }).then(response => {\n      for (let i = 0; i < response.data.length; i++) {\n        const newItem = {\n          user: response.data[i].user,\n          node: response.data[i].node,\n          id: response.data[i].id,\n          is_finished: response.data[i].is_finished,\n          date: response.data[i].date\n        };\n        this.nodes.push(newItem);\n      }\n    })\n  },\n  computed: {\n    to_do() {\n      let num = 0\n      for (let i = 0; i < this.nodes.length; i++) {\n        if (!this.nodes[i].is_finished) {\n          num += 1\n        }\n      }\n      return num\n    },\n    count_of_tasks() {\n      return this.nodes.length\n    },\n    count_of_finished() {\n      let num = 0;\n      for (let i = 0; i < this.nodes.length; i++) {\n        if (this.nodes[i].is_finished) {\n          num += 1\n        }\n      }\n      return num\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.container {\n  display: flex;\n  width: 1000px;\n  margin: 20px auto;\n  align-items: center;\n  justify-content: center;\n}\n\n.tasks {\n  position: relative;\n}\n\nh1 {\n  font-family: Montserrat, sans-serif, \"Noto Sans Old Italic\";\n  font-size: 24px;\n  text-align: center;\n}\n\n.head_text {\n  font-family: Montserrat, sans-serif;\n  font-size: 36px;\n  padding: 10px;\n  margin: 0;\n  text-align: center;\n}\n\n.task_input {\n  width: 450px;\n  height: 30px;\n  border: none;\n  border-radius: 2px;\n  outline: none;\n  box-shadow: 0 3px 5px grey;\n  font-size: 16px;\n  font-family: Montserrat, sans-serif;\n  font-style: italic;\n  padding: 8px;\n}\n\n.counter {\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n}\n\n.list-item {\n  margin: 0 10px;\n  font-family: Montserrat, sans-serif;\n  font-style: normal;\n  font-size: 20px;\n}\n\n.first {\n  margin-left: 0;\n  padding-left: 0;\n}\n\n.del_btn {\n  grid-area: dl;\n  background-color: darkred;\n  height: 30px;\n  width: 30px;\n}\n\n.task_list {\n  display: grid;\n  grid-template-columns: repeat(15, 1fr);\n  grid-template: \"cb nd nd nd nd nd nd nd nd nd nd nd nd dl dl\"auto\n                 \"cb nd nd nd nd nd nd nd nd nd nd nd nd dl dl\";\n  margin-top: 15px;\n  font-family: Montserrat, sans-serif;\n  font-size: 16px;\n}\n\n.check {\n  grid-area: cb;\n  height: 30px;\n  width: 30px;\n  margin: 0;\n  padding: 0;\n  filter: invert(0%) hue-rotate(750deg) brightness(100%);\n}\n\n\n.task_item {\n  grid-area: nd;\n  width: 370px;\n  margin-left: 10px;\n  padding: 0;\n  border: 1px solid darkgray;\n  /*height: 30px;*/\n}\n\n.task_item p {\n  padding: 10px;\n  margin: 0;\n}\n\n</style>\n"],"sourceRoot":""}]}