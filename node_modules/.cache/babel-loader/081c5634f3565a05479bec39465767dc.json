{"remainingRequest":"/Users/josephrt/Desktop/todo_f/todo/node_modules/babel-loader/lib/index.js!/Users/josephrt/Desktop/todo_f/todo/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/josephrt/Desktop/todo_f/todo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/josephrt/Desktop/todo_f/todo/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/josephrt/Desktop/todo_f/todo/src/components/TaskList.vue?vue&type=template&id=189e9673&scoped=true","dependencies":[{"path":"/Users/josephrt/Desktop/todo_f/todo/src/components/TaskList.vue","mtime":1641476327906},{"path":"/Users/josephrt/Desktop/todo_f/todo/babel.config.js","mtime":1641400111697},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/cache-loader/dist/cjs.js","mtime":1641400095029},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/babel-loader/lib/index.js","mtime":1641400095212},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1641400088152},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/cache-loader/dist/cjs.js","mtime":1641400095029},{"path":"/Users/josephrt/Desktop/todo_f/todo/node_modules/vue-loader-v16/dist/index.js","mtime":1641400088146}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aFNjb3BlSWQgPSBmdW5jdGlvbiBfd2l0aFNjb3BlSWQobikgewogIHJldHVybiBfcHVzaFNjb3BlSWQoImRhdGEtdi0xODllOTY3MyIpLCBuID0gbigpLCBfcG9wU2NvcGVJZCgpLCBuOwp9OwoKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJjb250YWluZXIiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAidGFza3MiCn07Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIHsKICAgIGNsYXNzOiAiaGVhZF90ZXh0IgogIH0sICLwn5OdVG8tRG8gTGlzdCIsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogICAgY2xhc3M6ICJ0YXNrX2lucHV0IiwKICAgIHBsYWNlaG9sZGVyOiAi0KfQtdC8INC/0LvQsNC90LjRgNGD0LXRgtC1INC30LDQvdGP0YLRjNGB0Y8/IgogIH0sIG51bGwsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzUgPSB7CiAgY2xhc3M6ICJjb3VudGVyIgp9Owp2YXIgX2hvaXN0ZWRfNiA9IHsKICBjbGFzczogImxpc3QtaXRlbSBmaXJzdCIKfTsKdmFyIF9ob2lzdGVkXzcgPSB7CiAgY2xhc3M6ICJsaXN0LWl0ZW0iCn07CnZhciBfaG9pc3RlZF84ID0gewogIGNsYXNzOiAibGlzdC1pdGVtIgp9Owp2YXIgX2hvaXN0ZWRfOSA9IFsiY2hlY2tlZCIsICJvbkNsaWNrIl07CnZhciBfaG9pc3RlZF8xMCA9IHsKICBjbGFzczogInRhc2tfaXRlbSIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW19ob2lzdGVkXzMsIF9ob2lzdGVkXzQsIF9jcmVhdGVFbGVtZW50Vk5vZGUoInVsIiwgX2hvaXN0ZWRfNSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImxpIiwgX2hvaXN0ZWRfNiwgIlRhc2tzOiAiICsgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5jb3VudF9vZl90YXNrcyksIDEKICAvKiBURVhUICovCiAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgibGkiLCBfaG9pc3RlZF83LCAiVG9kbzogIiArIF90b0Rpc3BsYXlTdHJpbmcoJG9wdGlvbnMudG9fZG8pLCAxCiAgLyogVEVYVCAqLwogICksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImxpIiwgX2hvaXN0ZWRfOCwgIkRvbmU6ICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRvcHRpb25zLmNvdW50X29mX2ZpbmlzaGVkKSwgMQogIC8qIFRFWFQgKi8KICApXSksIChfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJGRhdGEubm9kZXMsIGZ1bmN0aW9uIChpdGVtKSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCB7CiAgICAgIGNsYXNzOiAidGFza19saXN0IiwKICAgICAga2V5OiBpdGVtLnVzZXIKICAgIH0sIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJpbnB1dCIsIHsKICAgICAgdHlwZTogImNoZWNrYm94IiwKICAgICAgY2xhc3M6ICJjaGVjayIsCiAgICAgIGNoZWNrZWQ6IGl0ZW0uaXNfZmluaXNoZWQsCiAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIGl0ZW0uaXNfZmluaXNoZWQgPSAhaXRlbS5pc19maW5pc2hlZDsKICAgICAgfQogICAgfSwgbnVsbCwgOAogICAgLyogUFJPUFMgKi8KICAgICwgX2hvaXN0ZWRfOSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzEwLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoaXRlbS5ub2RlKSwgMQogICAgLyogVEVYVCAqLwogICAgKV0pXSk7CiAgfSksIDEyOAogIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgKSldKV0pOwp9"},{"version":3,"sources":["/Users/josephrt/Desktop/todo_f/todo/src/components/TaskList.vue"],"names":[],"mappings":";;;;;;;AACO,EAAA,KAAK,EAAC;;;AACJ,EAAA,KAAK,EAAC;;;;sBACT,mBAAA,CAAqC,GAArC,EAAqC;AAAlC,IAAA,KAAK,EAAC;AAA4B,GAArC,EAAqB,cAArB,EAAiC,CAAA;AAAA;AAAjC,G;;;;sBACA,mBAAA,CAAiE,OAAjE,EAAiE;AAA1D,IAAA,KAAK,EAAC,YAAoD;AAAvC,IAAA,WAAW,EAAC;AAA2B,GAAjE,E,IAAA,E;;AAAA,G;;;;AACI,EAAA,KAAK,EAAC;;;AACJ,EAAA,KAAK,EAAC;;;AACN,EAAA,KAAK,EAAC;;;AACN,EAAA,KAAK,EAAC;;;;AAIL,EAAA,KAAK,EAAC;;;uBAXjB,mBAAA,CAcM,KAdN,EAAA,UAAA,EAcM,CAbJ,mBAAA,CAYM,KAZN,EAAA,UAAA,EAYM,CAXJ,UAWI,EAVJ,UAUI,EATJ,mBAAA,CAIK,IAJL,EAAA,UAAA,EAIK,CAHH,mBAAA,CAA4D,IAA5D,EAAA,UAAA,EAA4B,YAAO,gBAAA,CAAG,QAAA,CAAA,cAAH,CAAnC,EAAoD;AAAA;AAApD,GAGG,EAFH,mBAAA,CAA4C,IAA5C,EAAA,UAAA,EAAsB,WAAM,gBAAA,CAAG,QAAA,CAAA,KAAH,CAA5B,EAAoC;AAAA;AAApC,GAEG,EADH,mBAAA,CAAwD,IAAxD,EAAA,UAAA,EAAsB,WAAM,gBAAA,CAAG,QAAA,CAAA,iBAAH,CAA5B,EAAgD;AAAA;AAAhD,GACG,CAJL,CASI,G,kBAJJ,mBAAA,CAGM,SAHN,EAGM,IAHN,EAGM,WAAA,CAHgC,KAAA,CAAA,KAGhC,EAHqC,UAAb,IAAa,EAAT;yBAAlC,mBAAA,CAGM,KAHN,EAGM;AAHD,MAAA,KAAK,EAAC,WAGL;AAHwC,MAAA,GAAG,EAAE,IAAI,CAAC;AAGlD,KAHN,E,CACE,mBAAA,CAA+G,OAA/G,EAA+G;AAAxG,MAAA,IAAI,EAAC,UAAmG;AAAxF,MAAA,KAAK,EAAC,OAAkF;AAAzE,MAAA,OAAO,EAAE,IAAI,CAAC,WAA2D;AAA7C,MAAA,OAAK,EAAA,iBAAA,MAAA;AAAA,eAAE,IAAI,CAAC,WAAL,GAAgB,CAAI,IAAI,CAAC,WAA3B;AAAA;AAAwC,KAA/G,E,IAAA,E;;AAAA,M,UAAA,C,EACA,mBAAA,CAAmD,KAAnD,EAAA,WAAA,EAAmD,CAA5B,mBAAA,CAAsB,GAAtB,EAAsB,IAAtB,EAAsB,gBAAA,CAAhB,IAAI,CAAC,IAAW,CAAtB,EAAe;AAAA;AAAf,KAA4B,CAAnD,C,CAFF,C;GAGM,CAHN,E;;AAAA,GAII,EAZN,CAaI,CAdN,C","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"tasks\">\n      <p class=\"head_text\">üìùTo-Do List</p>\n      <input class=\"task_input\" placeholder=\"–ß–µ–º –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –∑–∞–Ω—è—Ç—å—Å—è?\">\n      <ul class=\"counter\">\n        <li class=\"list-item first\">Tasks: {{ count_of_tasks }}</li>\n        <li class=\"list-item\">Todo: {{ to_do }}</li>\n        <li class=\"list-item\">Done: {{ count_of_finished }}</li>\n      </ul>\n      <div class=\"task_list\" v-for=\"item in nodes\" :key=\"item.user\">\n        <input type=\"checkbox\" class=\"check\" :checked=\"item.is_finished\" @click=\"item.is_finished = !item.is_finished\">\n        <div class=\"task_item\"><p>{{ item.node }}</p></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n  name: \"TaskList\",\n  data() {\n    return {\n      nodes: [],\n      todo: 0,\n      tasks: 0,\n      done: 0\n    }\n  },\n  methods: {},\n  mounted() {\n    axios.get('http://localhost:8000/api/node/', {\n      headers: {\n        Authorization: \"Token 2d6b638b65798918380b720820903d34c4d88bc8\"\n      }\n    }).then(response => {\n      for (let i = 0; i < response.data.length; i++) {\n        const newItem = {\n          user: response.data[i].user,\n          node: response.data[i].node,\n          date: response.data[i].date,\n          is_finished: response.data[i].is_finished\n        };\n        this.nodes.push(newItem);\n      }\n    })\n    console.log(this.nodes)\n  },\n  computed: {\n    to_do() {\n      let num = 0\n      for (let i = 0; i < this.nodes.length; i++) {\n        if (!this.nodes[i].is_finished) {\n          num += 1\n        }\n      }\n      return num\n    },\n    count_of_tasks() {\n      return this.nodes.length\n    },\n    count_of_finished() {\n      let num = 0;\n      for (let i = 0; i < this.nodes.length; i++) {\n        if (this.nodes[i].is_finished) {\n          num += 1\n        }\n      }\n      return num\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.container {\n  display: flex;\n  width: 1000px;\n  margin: 20px auto;\n  align-items: center;\n  justify-content: center;\n}\n\n.tasks {\n  position: relative;\n}\n\nh1 {\n  font-family: Montserrat, sans-serif, \"Noto Sans Old Italic\";\n  font-size: 24px;\n  text-align: center;\n}\n\n.head_text {\n  font-family: Montserrat, sans-serif;\n  font-size: 36px;\n  padding: 10px;\n  margin: 0;\n  text-align: center;\n}\n\n.task_input {\n  width: 400px;\n  height: 30px;\n  border: none;\n  border-radius: 2px;\n  outline: none;\n  box-shadow: 0 3px 5px grey;\n  font-size: 16px;\n  font-family: Montserrat, sans-serif;\n  font-style: italic;\n  padding: 8px;\n}\n\n.counter {\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n}\n\n.list-item {\n  margin: 0 10px;\n  font-family: Montserrat, sans-serif;\n  font-style: normal;\n  font-size: 20px;\n}\n\n.first {\n  margin-left: 0;\n  padding-left: 0;\n}\n\n.task_list {\n  display: grid;\n  grid-template-columns: repeat(15, 1fr);\n  grid-template: \"cb nd nd nd nd nd nd nd nd nd nd nd nd nd nd\"auto\n                 \"cb nd nd nd nd nd nd nd nd nd nd nd nd nd nd\";\n  margin-top: 15px;\n  font-family: Montserrat, sans-serif;\n  font-size: 16px;\n}\n\n.check {\n  grid-area: cb;\n  height: 30px;\n  width: 30px;\n  margin: 0;\n  padding: 0;\n}\n\n\n.task_item {\n  grid-area: nd;\n  width: 370px;\n  margin-left: 10px;\n  padding: 0;\n  border: 1px solid darkgray;\n  /*height: 30px;*/\n}\n\n.task_item p {\n  padding: 10px;\n  margin: 0;\n}\n\n</style>\n"],"sourceRoot":""}]}